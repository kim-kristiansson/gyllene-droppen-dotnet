@inject NavigationManager Navigation
@inject ILogger<RedirectToHome> Logger

@code {
    [CascadingParameter] private Task<AuthenticationState>? AuthState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (AuthState == null) return;

        var authState = await AuthState;
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            Logger.LogInformation("User is authenticated, redirecting from restricted page to home");
            // Use NavigateTo with forceLoad:true to avoid any potential circular references
            Navigation.NavigateTo("/", false, true);
        }
    }

}