@inject NavigationManager Navigation
@inject ILogger<RedirectToHome> Logger

@ChildContent

@code {
    [Parameter] public RenderFragment ChildContent { get; set; } = default!;

    [CascadingParameter] private Task<AuthenticationState>? AuthState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (AuthState == null) return;

        var authState = await AuthState;
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            Logger.LogInformation("User is authenticated, redirecting from restricted page to home");
            Navigation.NavigateTo("/");
        }
    }

}