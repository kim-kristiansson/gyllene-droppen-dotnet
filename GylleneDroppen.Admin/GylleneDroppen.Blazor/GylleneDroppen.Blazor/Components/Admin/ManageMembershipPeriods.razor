@page "/admin/medlemskapsperioder"
@using Microsoft.AspNetCore.Authorization
@using GylleneDroppen.Application.Interfaces.Services
@using GylleneDroppen.Application.Dtos.Membership
@using System.ComponentModel.DataAnnotations

@inject IMembershipService MembershipService
@inject ILogger<ManageMembershipPeriods> Logger

@rendermode InteractiveServer

@attribute [Authorize(Policy = "AdminOnly")]

<style>
    @@keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }
    
    /* Media queries for responsive design */
    @@media (min-width: 768px) {
        /* Show table, hide mobile cards on tablets and desktop */
        div[style*="display: flex; flex-direction: column; gap: 1rem;"] {
            display: none !important;
        }
        
        div[style*="display: none; overflow-x: auto"] {
            display: block !important;
        }
    }
</style>

<PageTitle>Hantera medlemskapsperioder</PageTitle>

<div style="padding: 1.5rem 0; background: #D4CCC0; color: #2B1810; font-family: Georgia, serif; min-height: 100vh; overflow-x: hidden;">
<div style="max-width: 1200px; margin: 0 auto; padding: 0 1rem; min-width: 0; overflow-x: hidden;">
    <div class="page-header" style="margin-bottom: 2rem; padding-bottom: 1rem; border-bottom: 2px solid #B09B7C;">
        <h1 style="font-size: 2.25rem; color: #2B1810; margin: 0; font-weight: 600;">üìù Hantera medlemskapsperioder</h1>
    </div>

@if (!string.IsNullOrEmpty(statusMessage))
{
    <div class="alert @(statusMessage.StartsWith("Fel:") ? "alert-danger" : "alert-success")" style="padding: 1rem 1.5rem; border-radius: 0.375rem; margin-bottom: 1.5rem; display: flex; justify-content: space-between; align-items: center; font-weight: 500; @(statusMessage.StartsWith("Fel:") ? "background: rgba(239, 68, 68, 0.15); border: 1px solid #EF4444; color: #EF4444;" : "background: rgba(74, 124, 78, 0.15); border: 1px solid #4A7C4E; color: #4A7C4E;")">
        <span><strong>@(statusMessage.StartsWith("Fel:") ? "Fel" : "Info"):</strong> @statusMessage</span>
        <button type="button" class="btn btn-sm btn-secondary" @onclick="() => statusMessage = string.Empty" style="background: transparent; border: none; color: inherit; cursor: pointer; font-size: 1.25rem; padding: 0; opacity: 0.8; transition: opacity 0.2s ease;">‚úï</button>
    </div>
}

<div style="margin-bottom: 2rem;">
    <button type="button" class="btn btn-primary" @onclick="ShowCreateForm" style="padding: 0.75rem 1.5rem; background: #8B4513; color: white; border: 1px solid #8B4513; border-radius: 0.375rem; cursor: pointer; font-weight: 600; font-family: Georgia, serif; transition: all 0.2s ease;" onmouseover="this.style.background='#5D4037'; this.style.borderColor='#5D4037';" onmouseout="this.style.background='#8B4513'; this.style.borderColor='#8B4513';">
        ‚ûï Skapa ny medlemskapsperiod
    </button>
</div>

@if (showCreateForm)
{
    <div class="card mb-4" style="background: #DAD3C7; border: 1px solid #B09B7C; border-radius: 0.5rem; margin-bottom: 2rem; box-shadow: 0 1px 3px rgba(0,0,0,0.15);">
        <div class="card-header" style="background: #DFD9CE; padding: 1.25rem; border-bottom: 1px solid #B09B7C; border-radius: 0.5rem 0.5rem 0 0;">
            <h3 style="font-family: Georgia, serif; font-size: 1.25rem; color: #2B1810; margin: 0; font-weight: 600;">@(editingPeriod != null ? "Redigera medlemskapsperiod" : "Skapa ny medlemskapsperiod")</h3>
        </div>
        <div class="card-body" style="padding: 1.5rem;">
            <EditForm Model="createRequest" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3" style="margin-bottom: 1.5rem;">
                    <label for="name" class="form-label" style="display: block; font-weight: 600; color: #2B1810; margin-bottom: 0.5rem; font-family: Georgia, serif;">Namn</label>
                    <InputText id="name" class="form-control" @bind-Value="createRequest.Name" style="width: 100%; padding: 0.75rem; border: 1px solid #B09B7C; border-radius: 0.375rem; background: #DFD9CE; color: #2B1810; font-family: Georgia, serif;" />
                    <ValidationMessage For="@(() => createRequest.Name)" />
                </div>

                <div class="mb-3" style="margin-bottom: 1.5rem;">
                    <label for="duration" class="form-label" style="display: block; font-weight: 600; color: #2B1810; margin-bottom: 0.5rem; font-family: Georgia, serif;">Varaktighet (m√•nader)</label>
                    <InputNumber id="duration" class="form-control" @bind-Value="createRequest.DurationInMonths" style="width: 100%; padding: 0.75rem; border: 1px solid #B09B7C; border-radius: 0.375rem; background: #DFD9CE; color: #2B1810; font-family: Georgia, serif;" />
                    <ValidationMessage For="@(() => createRequest.DurationInMonths)" />
                </div>

                <div class="mb-3" style="margin-bottom: 1.5rem;">
                    <label for="price" class="form-label" style="display: block; font-weight: 600; color: #2B1810; margin-bottom: 0.5rem; font-family: Georgia, serif;">Pris (SEK)</label>
                    <InputNumber id="price" class="form-control" @bind-Value="createRequest.Price" step="0.01" style="width: 100%; padding: 0.75rem; border: 1px solid #B09B7C; border-radius: 0.375rem; background: #DFD9CE; color: #2B1810; font-family: Georgia, serif;" />
                    <ValidationMessage For="@(() => createRequest.Price)" />
                </div>

                <div class="mb-3" style="margin-bottom: 1.5rem;">
                    <div class="form-check" style="display: flex; align-items: center; gap: 0.5rem;">
                        <InputCheckbox id="isActive" class="form-check-input" @bind-Value="createRequest.IsActive" style="width: 1.125rem; height: 1.125rem; cursor: pointer;" />
                        <label class="form-check-label" for="isActive" style="color: #2B1810; cursor: pointer; font-family: Georgia, serif;">
                            Aktiv
                        </label>
                    </div>
                </div>

                <div class="d-flex gap-2" style="display: flex; gap: 0.75rem;">
                    <button type="submit" class="btn btn-primary" disabled="@isProcessing" style="padding: 0.75rem 1.25rem; background: #8B4513; color: white; border: 1px solid #8B4513; border-radius: 0.375rem; cursor: pointer; font-weight: 600; font-family: Georgia, serif; opacity: @(isProcessing ? "0.6" : "1");">
                        @if (isProcessing)
                        {
                            <span class="spinner-border spinner-border-sm me-2" style="display: inline-block; width: 1rem; height: 1rem; border: 2px solid white; border-radius: 50%; border-top-color: transparent; animation: spin 1s linear infinite; margin-right: 0.5rem;"></span>
                        }
                        @(editingPeriod != null ? "Uppdatera" : "Skapa")
                    </button>
                    <button type="button" class="btn btn-secondary" @onclick="CancelForm" style="padding: 0.75rem 1.25rem; background: #DFD9CE; color: #2B1810; border: 1px solid #B09B7C; border-radius: 0.375rem; cursor: pointer; font-weight: 600; font-family: Georgia, serif;">
                        Avbryt
                    </button>
                </div>
            </EditForm>
        </div>
    </div>
}

<h2 style="font-family: Georgia, serif; font-size: 1.5rem; color: #8B4513; margin: 2rem 0 1rem 0; font-weight: 600;">Alla medlemskapsperioder (@membershipPeriods.Count)</h2>

@if (isLoading)
{
    <div style="display: flex; justify-content: center; align-items: center; padding: 3rem; color: #5D4037; font-size: 1.125rem;">
        <div style="display: inline-block; width: 2rem; height: 2rem; border: 3px solid #B09B7C; border-radius: 50%; border-top-color: #8B4513; animation: spin 1s linear infinite; margin-right: 0.75rem;"></div>
        Laddar medlemskapsperioder...
    </div>
}
else if (membershipPeriods.Any())
{
    <!-- Mobile Cards -->
    <div style="display: flex; flex-direction: column; gap: 1rem; margin: 1rem 0; overflow-x: hidden;">
        @foreach (var period in membershipPeriods.OrderByDescending(p => p.CreatedDate))
        {
            <div style="background: #DFD9CE; border: 1px solid #B09B7C; border-radius: 0.5rem; padding: 1rem; box-shadow: 0 2px 8px rgba(0,0,0,0.15); position: relative; min-width: 0; overflow-x: hidden; @(!period.IsActive ? "opacity: 0.7;" : "")">
                <div style="position: absolute; top: 0; left: 0; width: 4px; height: 100%; background: @(period.IsActive ? "#4A7C4E" : "#9CA3AF");"></div>
                
                <div style="margin-bottom: 1rem;">
                    <h3 style="font-size: 1.125rem; font-weight: 600; color: #2B1810; margin: 0 0 0.5rem 0; font-family: Georgia, serif; word-wrap: break-word; overflow-wrap: break-word;">@period.Name</h3>
                    <div style="display: inline-flex; align-items: center; padding: 0.25rem 0.75rem; border-radius: 9999px; font-size: 0.75rem; font-weight: 600; @(period.IsActive ? "background: #4A7C4E; color: white;" : "background: #9CA3AF; color: white;")">
                        @(period.IsActive ? "Aktiv" : "Inaktiv")
                    </div>
                </div>
                
                <div style="display: flex; flex-direction: column; gap: 0.75rem; margin-bottom: 1rem;">
                    <div style="padding: 0.75rem; background: #DAD3C7; border-radius: 0.375rem; border-left: 3px solid #8B4513; min-width: 0;">
                        <div style="font-size: 0.75rem; color: #6B5D54; font-weight: 500; margin-bottom: 0.25rem; text-transform: uppercase; letter-spacing: 0.025rem; font-family: Georgia, serif;">Varaktighet</div>
                        <div style="font-size: 1rem; font-weight: 600; color: #2B1810; font-family: Georgia, serif;">@period.DurationInMonths @(period.DurationInMonths == 1 ? "m√•nad" : "m√•nader")</div>
                    </div>
                    
                    <div style="padding: 0.75rem; background: #DAD3C7; border-radius: 0.375rem; border-left: 3px solid #8B4513; min-width: 0;">
                        <div style="font-size: 0.75rem; color: #6B5D54; font-weight: 500; margin-bottom: 0.25rem; text-transform: uppercase; letter-spacing: 0.025rem; font-family: Georgia, serif;">Pris</div>
                        <div style="font-size: 1rem; font-weight: 600; color: #2B1810; font-family: Georgia, serif;">@period.Price.ToString("C")</div>
                    </div>
                    
                    <div style="padding: 0.75rem; background: #DAD3C7; border-radius: 0.375rem; border-left: 3px solid #8B4513; min-width: 0;">
                        <div style="font-size: 0.75rem; color: #6B5D54; font-weight: 500; margin-bottom: 0.25rem; text-transform: uppercase; letter-spacing: 0.025rem; font-family: Georgia, serif;">Skapad</div>
                        <div style="font-size: 0.875rem; font-weight: 500; color: #2B1810; font-family: Georgia, serif;">@period.CreatedDate.ToString("yyyy-MM-dd")</div>
                    </div>
                    
                    <div style="padding: 0.75rem; background: #DAD3C7; border-radius: 0.375rem; border-left: 3px solid #8B4513; min-width: 0;">
                        <div style="font-size: 0.75rem; color: #6B5D54; font-weight: 500; margin-bottom: 0.25rem; text-transform: uppercase; letter-spacing: 0.025rem; font-family: Georgia, serif;">Skapad av</div>
                        <div style="font-size: 0.875rem; font-weight: 500; color: #2B1810; font-family: Georgia, serif; word-wrap: break-word; overflow-wrap: break-word;">@period.CreatedByUserName</div>
                    </div>
                </div>
                
                <div style="display: flex; gap: 0.5rem; padding-top: 1rem; border-top: 1px solid #B09B7C; flex-wrap: wrap;">
                    <button type="button" @onclick="() => ShowEditForm(period)" disabled="@isProcessing" 
                            style="flex: 1; min-width: 120px; padding: 0.625rem 0.75rem; background: transparent; color: #8B4513; border: 1px solid #8B4513; border-radius: 0.375rem; cursor: pointer; font-size: 0.8125rem; font-weight: 600; font-family: Georgia, serif; transition: all 0.2s ease; @(isProcessing ? "opacity: 0.6; cursor: not-allowed;" : "")"
                            onmouseover="if (!@isProcessing) { this.style.background='#8B4513'; this.style.color='white'; }" 
                            onmouseout="if (!@isProcessing) { this.style.background='transparent'; this.style.color='#8B4513'; }">
                        Redigera
                    </button>
                    <button type="button" @onclick="() => ConfirmDelete(period)" disabled="@isProcessing"
                            style="flex: 1; min-width: 120px; padding: 0.625rem 0.75rem; background: transparent; color: #EF4444; border: 1px solid #EF4444; border-radius: 0.375rem; cursor: pointer; font-size: 0.8125rem; font-weight: 600; font-family: Georgia, serif; transition: all 0.2s ease; @(isProcessing ? "opacity: 0.6; cursor: not-allowed;" : "")"
                            onmouseover="if (!@isProcessing) { this.style.background='#EF4444'; this.style.color='white'; }" 
                            onmouseout="if (!@isProcessing) { this.style.background='transparent'; this.style.color='#EF4444'; }">
                        Ta bort
                    </button>
                </div>
            </div>
        }
    </div>
    
    <!-- Desktop Table -->
    <div style="display: none; overflow-x: auto; -webkit-overflow-scrolling: touch; margin: 1rem 0;">
        <table style="width: 100%; min-width: 900px; border-collapse: collapse; background: #DFD9CE; border-radius: 0.5rem; overflow: hidden; box-shadow: 0 1px 3px rgba(0,0,0,0.15); border: 1px solid #B09B7C; margin: 1rem 0;">
            <thead style="background: #8B4513;">
                <tr>
                    <th style="padding: 0.75rem; text-align: left; font-weight: 700; font-size: 0.75rem; text-transform: uppercase; color: white; border-right: 1px solid #B09B7C; font-family: Georgia, serif; white-space: nowrap;">Namn</th>
                    <th style="padding: 0.75rem; text-align: left; font-weight: 700; font-size: 0.75rem; text-transform: uppercase; color: white; border-right: 1px solid #B09B7C; font-family: Georgia, serif; white-space: nowrap;">Varaktighet</th>
                    <th style="padding: 0.75rem; text-align: left; font-weight: 700; font-size: 0.75rem; text-transform: uppercase; color: white; border-right: 1px solid #B09B7C; font-family: Georgia, serif; white-space: nowrap;">Pris</th>
                    <th style="padding: 0.75rem; text-align: left; font-weight: 700; font-size: 0.75rem; text-transform: uppercase; color: white; border-right: 1px solid #B09B7C; font-family: Georgia, serif; white-space: nowrap;">Status</th>
                    <th style="padding: 0.75rem; text-align: left; font-weight: 700; font-size: 0.75rem; text-transform: uppercase; color: white; border-right: 1px solid #B09B7C; font-family: Georgia, serif; white-space: nowrap;">Skapad</th>
                    <th style="padding: 0.75rem; text-align: left; font-weight: 700; font-size: 0.75rem; text-transform: uppercase; color: white; border-right: 1px solid #B09B7C; font-family: Georgia, serif; white-space: nowrap;">Skapad av</th>
                    <th style="padding: 0.75rem; text-align: left; font-weight: 700; font-size: 0.75rem; text-transform: uppercase; color: white; font-family: Georgia, serif; white-space: nowrap;">√Ötg√§rder</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var period in membershipPeriods.OrderByDescending(p => p.CreatedDate))
                {
                    <tr style="border-bottom: 1px solid #B09B7C; @(period.IsActive ? "background: #DFD9CE;" : "background: #E8E0D5; opacity: 0.7;")">
                        <td style="padding: 0.75rem; color: #2B1810; border-right: 1px solid #B09B7C; font-family: Georgia, serif; white-space: nowrap;">@period.Name</td>
                        <td style="padding: 0.75rem; color: #2B1810; border-right: 1px solid #B09B7C; font-family: Georgia, serif; white-space: nowrap;">@period.DurationInMonths @(period.DurationInMonths == 1 ? "m√•nad" : "m√•nader")</td>
                        <td style="padding: 0.75rem; color: #2B1810; border-right: 1px solid #B09B7C; font-family: Georgia, serif; white-space: nowrap;">@period.Price.ToString("C")</td>
                        <td style="padding: 0.75rem; color: #2B1810; border-right: 1px solid #B09B7C; font-family: Georgia, serif;">
                            <span style="padding: 0.25rem 0.75rem; border-radius: 9999px; font-size: 0.75rem; font-weight: 600; white-space: nowrap; @(period.IsActive ? "background: #4A7C4E; color: white;" : "background: #9CA3AF; color: white;")">
                                @(period.IsActive ? "Aktiv" : "Inaktiv")
                            </span>
                        </td>
                        <td style="padding: 0.75rem; color: #2B1810; border-right: 1px solid #B09B7C; font-family: Georgia, serif; white-space: nowrap;">@period.CreatedDate.ToString("yyyy-MM-dd")</td>
                        <td style="padding: 0.75rem; color: #2B1810; border-right: 1px solid #B09B7C; font-family: Georgia, serif; white-space: nowrap;">@period.CreatedByUserName</td>
                        <td style="padding: 0.75rem; color: #2B1810; font-family: Georgia, serif;">
                            <div style="display: flex; gap: 0.5rem;">
                                <button type="button" @onclick="() => ShowEditForm(period)" disabled="@isProcessing" 
                                        style="padding: 0.5rem 1rem; background: transparent; color: #8B4513; border: 1px solid #8B4513; border-radius: 0.375rem; cursor: pointer; font-size: 0.875rem; font-weight: 600; font-family: Georgia, serif; transition: all 0.2s ease; @(isProcessing ? "opacity: 0.6; cursor: not-allowed;" : "")"
                                        onmouseover="if (!@isProcessing) { this.style.background='#8B4513'; this.style.color='white'; }" 
                                        onmouseout="if (!@isProcessing) { this.style.background='transparent'; this.style.color='#8B4513'; }">
                                    Redigera
                                </button>
                                <button type="button" @onclick="() => ConfirmDelete(period)" disabled="@isProcessing"
                                        style="padding: 0.5rem 1rem; background: transparent; color: #EF4444; border: 1px solid #EF4444; border-radius: 0.375rem; cursor: pointer; font-size: 0.875rem; font-weight: 600; font-family: Georgia, serif; transition: all 0.2s ease; @(isProcessing ? "opacity: 0.6; cursor: not-allowed;" : "")"
                                        onmouseover="if (!@isProcessing) { this.style.background='#EF4444'; this.style.color='white'; }" 
                                        onmouseout="if (!@isProcessing) { this.style.background='transparent'; this.style.color='#EF4444'; }">
                                    Ta bort
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div style="text-align: center; padding: 3rem 2rem; color: #5D4037;">
        <div style="font-size: 4rem; margin-bottom: 1rem; opacity: 0.5;">üìù</div>
        <h3 style="font-family: Georgia, serif; font-size: 1.5rem; margin-bottom: 1rem; color: #2B1810;">Inga medlemskapsperioder hittades</h3>
        <p style="font-size: 1rem; margin-bottom: 1.5rem;">Inga medlemskapsperioder har skapats √§n.</p>
    </div>
}

@if (showDeleteConfirmation && periodToDelete != null)
{
    <div class="modal show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5); position: fixed; top: 0; left: 0; width: 100%; height: 100%; display: flex; align-items: center; justify-content: center; z-index: 1050;">
        <div class="modal-dialog" style="max-width: 500px; margin: auto;">
            <div class="modal-content" style="background: #DAD3C7; border: 2px solid #8B4513; border-radius: 0.5rem; box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25); overflow: hidden;">
                <div class="modal-header" style="background: #DFD9CE; padding: 1.25rem; border-bottom: 1px solid #B09B7C;">
                    <h5 class="modal-title" style="margin: 0; font-family: Georgia, serif; font-size: 1.25rem; color: #2B1810; font-weight: 600;">Bekr√§fta borttagning</h5>
                </div>
                <div class="modal-body" style="padding: 1.5rem 1.25rem; color: #2B1810;">
                    <p>√Ñr du s√§ker p√• att du vill ta bort medlemskapsperioden <strong>@periodToDelete.Name</strong>?</p>
                    <p class="text-warning" style="color: #F59E0B; font-size: 0.875rem; font-style: italic;">Detta kan p√•verka befintliga medlemskap som anv√§nder denna period.</p>
                </div>
                <div class="modal-footer" style="background: #DFD9CE; padding: 1rem 1.25rem; border-top: 1px solid #B09B7C; display: flex; justify-content: flex-end; gap: 0.75rem;">
                    <button type="button" class="btn btn-secondary" @onclick="CancelDelete" style="padding: 0.75rem 1.25rem; background: #DFD9CE; color: #2B1810; border: 1px solid #B09B7C; border-radius: 0.375rem; cursor: pointer; font-weight: 600; font-family: Georgia, serif;">Avbryt</button>
                    <button type="button" class="btn btn-danger" @onclick="ConfirmDeletePeriod" disabled="@isProcessing" style="padding: 0.75rem 1.25rem; background: #EF4444; color: white; border: 1px solid #EF4444; border-radius: 0.375rem; cursor: pointer; font-weight: 600; font-family: Georgia, serif; opacity: @(isProcessing ? "0.6" : "1");">
                        @if (isProcessing)
                        {
                            <span class="spinner-border spinner-border-sm me-2" style="display: inline-block; width: 1rem; height: 1rem; border: 2px solid white; border-radius: 50%; border-top-color: transparent; animation: spin 1s linear infinite; margin-right: 0.5rem;"></span>
                        }
                        Ta bort
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<MembershipPeriodDto> membershipPeriods = new();
    private CreateMembershipPeriodRequestDto createRequest = new();
    private MembershipPeriodDto? editingPeriod = null;
    private MembershipPeriodDto? periodToDelete = null;
    private string statusMessage = string.Empty;
    private bool isLoading = true;
    private bool isProcessing = false;
    private bool showCreateForm = false;
    private bool showDeleteConfirmation = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadMembershipPeriods();
    }

    private async Task LoadMembershipPeriods()
    {
        try
        {
            isLoading = true;
            membershipPeriods = await MembershipService.GetAllMembershipPeriodsAsync();
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error loading membership periods");
            statusMessage = "Fel: Kunde inte ladda medlemskapsperioder";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private void ShowCreateForm()
    {
        editingPeriod = null;
        createRequest = new CreateMembershipPeriodRequestDto();
        showCreateForm = true;
        StateHasChanged();
    }

    private void ShowEditForm(MembershipPeriodDto period)
    {
        editingPeriod = period;
        createRequest = new CreateMembershipPeriodRequestDto
        {
            Name = period.Name,
            DurationInMonths = period.DurationInMonths,
            Price = period.Price,
            IsActive = period.IsActive
        };
        showCreateForm = true;
        StateHasChanged();
    }

    private void CancelForm()
    {
        showCreateForm = false;
        editingPeriod = null;
        createRequest = new CreateMembershipPeriodRequestDto();
        StateHasChanged();
    }

    private async Task HandleValidSubmit()
    {
        if (isProcessing) return;

        try
        {
            isProcessing = true;
            StateHasChanged();

            if (editingPeriod != null)
            {
                // Update existing period
                await MembershipService.UpdateMembershipPeriodAsync(editingPeriod.Id, createRequest);
                statusMessage = $"Medlemskapsperioden '{createRequest.Name}' har uppdaterats.";
            }
            else
            {
                // Create new period
                await MembershipService.CreateMembershipPeriodAsync(createRequest);
                statusMessage = $"Medlemskapsperioden '{createRequest.Name}' har skapats.";
            }

            await LoadMembershipPeriods();
            CancelForm();
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error saving membership period");
            statusMessage = $"Fel: Kunde inte spara medlemskapsperioden. {ex.Message}";
        }
        finally
        {
            isProcessing = false;
            StateHasChanged();
        }
    }

    private void ConfirmDelete(MembershipPeriodDto period)
    {
        periodToDelete = period;
        showDeleteConfirmation = true;
        StateHasChanged();
    }

    private void CancelDelete()
    {
        periodToDelete = null;
        showDeleteConfirmation = false;
        StateHasChanged();
    }

    private async Task ConfirmDeletePeriod()
    {
        if (periodToDelete == null || isProcessing) return;

        try
        {
            isProcessing = true;
            StateHasChanged();

            var success = await MembershipService.DeleteMembershipPeriodAsync(periodToDelete.Id);
            
            if (success)
            {
                statusMessage = $"Medlemskapsperioden '{periodToDelete.Name}' har tagits bort.";
                await LoadMembershipPeriods();
            }
            else
            {
                statusMessage = "Fel: Kunde inte ta bort medlemskapsperioden. Den kan vara kopplad till befintliga medlemskap.";
            }

            CancelDelete();
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error deleting membership period {PeriodId}", periodToDelete.Id);
            statusMessage = $"Fel: Kunde inte ta bort medlemskapsperioden. {ex.Message}";
        }
        finally
        {
            isProcessing = false;
            StateHasChanged();
        }
    }
}
</div>
</div>