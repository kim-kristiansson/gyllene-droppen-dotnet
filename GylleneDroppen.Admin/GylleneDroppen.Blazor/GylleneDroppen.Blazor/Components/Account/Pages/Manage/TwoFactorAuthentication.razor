@page "/konto/hantera/tvafaktorsautentisering"

@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Identity
@using GylleneDroppen.Core.Entities

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager

<PageTitle>Tvåfaktorsautentisering (2FA)</PageTitle>

<StatusMessage/>
<h3>Tvåfaktorsautentisering (2FA)</h3>

@if (canTrack)
{
    if (is2faEnabled)
    {
        if (recoveryCodesLeft == 0)
        {
            <div role="alert">
                <strong>Du har inga reservkoder kvar.</strong>
                <p>Du måste <a href="/konto/hantera/generera-reservkoder">generera ett nytt set med reservkoder</a>
                    innan du kan logga in med en kod.</p>
            </div>
        }
        else if (recoveryCodesLeft == 1)
        {
            <div role="alert">
                <strong>Du har 1 reservkod kvar.</strong>
                <p>Du kan <a href="/konto/hantera/generera-reservkoder">generera ett nytt set med reservkoder</a>.</p>
            </div>
        }
        else if (recoveryCodesLeft <= 3)
        {
            <div role="alert">
                <strong>Du har @recoveryCodesLeft reservkoder kvar.</strong>
                <p>Du bör <a href="/konto/hantera/generera-reservkoder">generera ett nytt set med reservkoder</a>.</p>
            </div>
        }

        if (isMachineRemembered)
        {
            <form @formname="forget-browser" @onsubmit="OnSubmitForgetBrowserAsync" method="post">
                <AntiforgeryToken/>
                <button type="submit">Glöm denna webbläsare</button>
            </form>
        }

        <a href="/konto/hantera/inaktivera-2fa">Inaktivera 2FA</a>
        <a href="/konto/hantera/generera-reservkoder">Återställ reservkoder</a>
    }

    <h4>Autentiseringsapp</h4>

    @if (!hasAuthenticator)
    {
        <a href="/konto/hantera/aktivera-autentiserare">Lägg till autentiseringsapp</a>
    }
    else
    {
        <a href="/konto/hantera/aktivera-autentiserare">Ställ in autentiseringsapp</a>
        <a href="/konto/hantera/aterstall-autentiserare">Återställ autentiseringsapp</a>
    }
}
else
{
    <div role="alert">
        <strong>Du har inte godkänt vår integritets- och cookiepolicy.</strong>
        <p>Du måste godkänna policyn innan du kan aktivera tvåfaktorsautentisering.</p>
    </div>
}

@code {
    private bool canTrack;
    private bool hasAuthenticator;
    private int recoveryCodesLeft;
    private bool is2faEnabled;
    private bool isMachineRemembered;

    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        var user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        canTrack = HttpContext.Features.Get<ITrackingConsentFeature>()?.CanTrack ?? true;
        hasAuthenticator = await UserManager.GetAuthenticatorKeyAsync(user) is not null;
        is2faEnabled = await UserManager.GetTwoFactorEnabledAsync(user);
        isMachineRemembered = await SignInManager.IsTwoFactorClientRememberedAsync(user);
        recoveryCodesLeft = await UserManager.CountRecoveryCodesAsync(user);
    }

    private async Task OnSubmitForgetBrowserAsync()
    {
        await SignInManager.ForgetTwoFactorClientAsync();

        RedirectManager.RedirectToCurrentPageWithStatus(
            "Den aktuella webbläsaren har glömts. Nästa gång du loggar in här måste du ange en 2FA-kod.",
            HttpContext);
    }

}
