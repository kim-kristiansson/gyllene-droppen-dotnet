@page "/konto/hantera"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using GylleneDroppen.Core.Entities

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager

<PageTitle>Profil</PageTitle>

<h3>Profil</h3>
<StatusMessage/>

<EditForm Model="Input" FormName="profile" OnValidSubmit="OnValidSubmitAsync" method="post">
    <DataAnnotationsValidator/>
    <ValidationSummary role="alert"/>

    <div>
        <input type="text" value="@username" id="username" placeholder="Välj ditt användarnamn." disabled/>
        <label for="username">Användarnamn</label>
    </div>

    <div>
        <InputText @bind-Value="Input.PhoneNumber" id="Input.PhoneNumber" placeholder="Ange ditt telefonnummer"/>
        <label for="Input.PhoneNumber">Telefonnummer</label>
        <ValidationMessage For="() => Input.PhoneNumber"/>
    </div>

    <button type="submit">Spara</button>
</EditForm>

@code {
    private ApplicationUser user = default!;
    private string? username;
    private string? phoneNumber;

    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm] private InputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        username = await UserManager.GetUserNameAsync(user);
        phoneNumber = await UserManager.GetPhoneNumberAsync(user);

        Input.PhoneNumber ??= phoneNumber;
    }

    private async Task OnValidSubmitAsync()
    {
        if (Input.PhoneNumber != phoneNumber)
        {
            var setPhoneResult = await UserManager.SetPhoneNumberAsync(user, Input.PhoneNumber);
            if (!setPhoneResult.Succeeded)
            {
                RedirectManager.RedirectToCurrentPageWithStatus("Fel: Kunde inte uppdatera telefonnummer.", HttpContext);
            }
        }

        await SignInManager.RefreshSignInAsync(user);
        RedirectManager.RedirectToCurrentPageWithStatus("Din profil har uppdaterats.", HttpContext);
    }

    private sealed class InputModel
    {
        [Phone(ErrorMessage = "Ogiltigt telefonnummer.")]
        [Display(Name = "Telefonnummer")]
        public string? PhoneNumber { get; set; }
    }

}
