@page "/konto/hantera/generera-reservkoder"

@using Microsoft.AspNetCore.Identity
@using GylleneDroppen.Core.Entities

@inject UserManager<ApplicationUser> UserManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ILogger<GenerateRecoveryCodes> Logger

<PageTitle>Generera reservkoder för tvåfaktorsautentisering (2FA)</PageTitle>

@if (recoveryCodes is not null)
{
    <ShowRecoveryCodes RecoveryCodes="recoveryCodes.ToArray()" StatusMessage="@message"/>
}
else
{
    <h3>Generera reservkoder för tvåfaktorsautentisering (2FA)</h3>
    <div role="alert">
        <p>
            <strong>Spara dessa koder på en säker plats.</strong>
        </p>
        <p>
            Om du förlorar din enhet och inte har tillgång till reservkoderna kommer du inte att kunna logga in på ditt
            konto.
        </p>
        <p>
            Att generera nya reservkoder ändrar inte nycklarna som används i autentiseringsappar. Om du vill byta nyckel
            som används i en autentiseringsapp bör du <a href="/konto/hantera/aterstall-autentiserare">återställa dina
                autentiseringsnycklar.</a>
        </p>
    </div>
    <div>
        <form @formname="generate-recovery-codes" @onsubmit="OnSubmitAsync" method="post">
            <AntiforgeryToken/>
            <button type="submit">Generera reservkoder</button>
        </form>
    </div>
}

@code {
    private string? message;
    private ApplicationUser user = default!;
    private IEnumerable<string>? recoveryCodes;

    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);

        var isTwoFactorEnabled = await UserManager.GetTwoFactorEnabledAsync(user);
        if (!isTwoFactorEnabled)
        {
            throw new InvalidOperationException("Kan inte generera reservkoder eftersom användaren inte har aktiverat 2FA.");
        }
    }

    private async Task OnSubmitAsync()
    {
        var userId = await UserManager.GetUserIdAsync(user);
        recoveryCodes = await UserManager.GenerateNewTwoFactorRecoveryCodesAsync(user, 10);
        message = "Du har genererat nya reservkoder.";

        Logger.LogInformation("Användare med ID '{UserId}' har genererat nya 2FA-reservkoder.", userId);
    }

}
