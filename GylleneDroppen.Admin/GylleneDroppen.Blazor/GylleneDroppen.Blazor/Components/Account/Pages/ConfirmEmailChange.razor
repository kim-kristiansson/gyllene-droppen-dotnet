@page "/konto/bekrafta-epostbyte"

@using System.Text
@using GylleneDroppen.Core.Entities
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Bekräfta e-postbyte</PageTitle>

<h1>Bekräfta e-postbyte</h1>

<StatusMessage Message="@message"/>

@code {
    private string? message;

    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery] private string? UserId { get; set; }

    [SupplyParameterFromQuery] private string? Email { get; set; }

    [SupplyParameterFromQuery] private string? Code { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (UserId is null || Email is null || Code is null)
        {
            RedirectManager.RedirectToWithStatus(
                "/konto/logga-in", "Fel: Ogiltig länk för bekräftelse av e-postbyte.", HttpContext);
        }

        var user = await UserManager.FindByIdAsync(UserId);
        if (user is null)
        {
            message = $"Kunde inte hitta användare med ID '{UserId}'";
            return;
        }

        var code = Encoding.UTF8.GetString(WebEncoders.Base64UrlDecode(Code));
        var result = await UserManager.ChangeEmailAsync(user, Email, code);
        if (!result.Succeeded)
        {
            message = "Fel vid byte av e-postadress.";
            return;
        }

        // Eftersom e-postadress = användarnamn i detta UI uppdateras även användarnamnet
        var setUserNameResult = await UserManager.SetUserNameAsync(user, Email);
        if (!setUserNameResult.Succeeded)
        {
            message = "Fel vid byte av användarnamn.";
            return;
        }

        await SignInManager.RefreshSignInAsync(user);
        message = "Tack för att du bekräftade ditt byte av e-postadress.";
    }

}