@page "/konto/glomt-losenord"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using GylleneDroppen.Core.Entities

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Glömt ditt lösenord?</PageTitle>

<h1>Glömt ditt lösenord?</h1>
<h2>Ange din e-postadress</h2>
<hr/>

<EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
    <DataAnnotationsValidator/>
    <ValidationSummary role="alert"/>

    <div>
        <InputText @bind-Value="Input.Email" id="Input.Email" autocomplete="username" aria-required="true"
                   placeholder="namn@example.com"/>
        <label for="Input.Email">E-postadress</label>
        <ValidationMessage For="() => Input.Email"/>
    </div>

    <button type="submit">Återställ lösenord</button>
</EditForm>

@code {
    [SupplyParameterFromForm] private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email);
        if (user is null || !(await UserManager.IsEmailConfirmedAsync(user)))
        {
            // Avslöja inte om användaren inte finns eller inte har bekräftat sin e-post
            RedirectManager.RedirectTo("/konto/bekraftelse-glomt-losenord");
        }

        var code = await UserManager.GeneratePasswordResetTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("/konto/aterstall-losenord").AbsoluteUri,
            new Dictionary<string, object?> { ["code"] = code });

        await EmailSender.SendPasswordResetLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        RedirectManager.RedirectTo("/konto/bekraftelse-glomt-losenord");
    }

    private sealed class InputModel
    {
        [Required(ErrorMessage = "E-postadress är obligatorisk.")]
        [EmailAddress(ErrorMessage = "Ogiltig e-postadress.")]
        public string Email { get; set; } = "";
    }

}
