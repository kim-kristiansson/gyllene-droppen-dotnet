@page "/konto/skicka-epostbekraftelse"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using GylleneDroppen.Core.Entities

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Skicka e-postbekräftelse igen</PageTitle>

<h1>Skicka e-postbekräftelse igen</h1>
<h2>Ange din e-postadress</h2>
<hr/>
<StatusMessage Message="@message"/>

<EditForm Model="Input" FormName="resend-email-confirmation" OnValidSubmit="OnValidSubmitAsync" method="post">
    <DataAnnotationsValidator/>
    <ValidationSummary role="alert"/>

    <div>
        <InputText @bind-Value="Input.Email" id="Input.Email" aria-required="true" placeholder="namn@example.com"/>
        <label for="Input.Email">E-postadress</label>
        <ValidationMessage For="() => Input.Email"/>
    </div>

    <button type="submit">Skicka igen</button>
</EditForm>

@code {
    private string? message;

    [SupplyParameterFromForm] private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email!);
        if (user is null)
        {
            message = "Verifieringsmejl skickat. Kontrollera din e-post.";
            return;
        }

        var userId = await UserManager.GetUserIdAsync(user);
        var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("/konto/bekrafta-epost").AbsoluteUri,
            new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code });

        await EmailSender.SendConfirmationLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        message = "Verifieringsmejl skickat. Kontrollera din e-post.";
    }

    private sealed class InputModel
    {
        [Required(ErrorMessage = "E-postadress är obligatorisk.")]
        [EmailAddress(ErrorMessage = "Ogiltig e-postadress.")]
        public string Email { get; set; } = "";
    }

}
