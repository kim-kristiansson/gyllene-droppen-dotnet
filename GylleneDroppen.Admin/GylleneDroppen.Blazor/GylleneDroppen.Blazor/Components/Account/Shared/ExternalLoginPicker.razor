@using GylleneDroppen.Core.Entities
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityRedirectManager RedirectManager

@if (externalLogins.Length == 0)
{
    <div>
        <p>
            Det finns inga externa inloggningstjänster konfigurerade. Se
            <a href="https://go.microsoft.com/fwlink/?LinkID=532715">
                den här artikeln om hur du ställer in inloggning via externa tjänster i en ASP.NET-applikation
            </a>.
        </p>
    </div>
}
else
{
    <form action="konto/starta-extern-inloggning" method="post">
        <AntiforgeryToken/>
        <input type="hidden" name="ReturnUrl" value="@ReturnUrl"/>
        <p>
            @foreach (var provider in externalLogins)
            {
                <button type="submit" name="provider" value="@provider.Name">@provider.DisplayName</button>
            }
        </p>
    </form>
}


@code {
    private AuthenticationScheme[] externalLogins = [];

    [SupplyParameterFromQuery] private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        externalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToArray();
    }

}